/*
 * Markov Chain styel sheet
 */

@import url('http://spacewalk.simonwallner.at/app/css/base.css');
@import "bourbon/bourbon";

/* some colors */
$orange: #e89f49;
$lime: #b6ce4e;
$turquise: #5dd1a4;
$blue: #3fc0c9;
$lavender: #8885ed;
$rose: #c673d8;
$red: #e25454;


$bgColor: #333333;
$boxBGColor: #4d4d4d;
$labelColor: #787878;

$innerRadius: 3px;
$outerRadius: 5px;
$borderWidth: 5px;

$boxHeight: 85px;
$gutter: 4px;

$halfGutter: $gutter / 2;
$innerHeight: $boxHeight - 2 * $gutter;
$innerWidth: $innerHeight * 1.2;
$smallHeight: ($innerHeight - $gutter) / 2;
$smallWidth: ($innerWidth - $gutter) / 2;

// --- general rules ----------------------------------------------------------
body {
	background-color: $bgColor;
}

h1 {
	color: white;
	padding-left: 0.5em;
	padding-right: 0.5em;
	margin: 0px;

	position: relative;
	display: block;
	top: 50%;
	@include transform(translateY(-50%));
}

div {
	box-sizing: border-box;
}

.box {
	background-color: $boxBGColor;
	display: block;
	float: left;
	border-radius: $outerRadius;
	height: $boxHeight;

	margin-left: $gutter;
	margin-bottom: $gutter;

	padding: $halfGutter;

	color: white;
	text-transform: uppercase;
	font-size: 14px;
}

.group, .label, .optionGroup, .option, .button, .statusGroup {
	float: left;
}

.label, .option, .button, .statusGroup {
	margin: $halfGutter;
}


.button, .label, .option, .indicator {
	border-radius: $innerRadius;
	height: $smallHeight;
	width: $smallWidth;
	font-weight: 200;
	letter-spacing: 0.12em;
	line-height: 1.2em;
	text-align: center;

	span {
		position: relative;
	 	top: 50%;
		display: block;
		@include transform(translateY(-50%));
	}
}

.button, .option {
	background-color: mix($blue, $boxBGColor, 30);
	cursor: pointer;

	&:hover {
		// background-color: mix($blue, $labelColor, 50);
		border: 1px solid white;
	}

	&.active {
		background-color: $blue;
		&:hover {
			// background-color: mix($blue, $labelColor, 70);
		}
	}

}

.label {
	background-color: $labelColor;
}

.large {
	font-size: 1.3em;
}

.button.large, .label.large {
	height: $innerHeight;
	width: $innerWidth ;

	strong {
		font-size: 3.5em;
		font-weight: 300;
		display: block;
	}
}

.label.large {
	width: $innerWidth;
}

.label.wide {
	width: $innerWidth;
}

.statusGroup {
	background-color: $labelColor;
	border-radius: $innerRadius;
	.label {
		margin-top: 0px;
	}
}

.indicator {
	background-color: $lime;
	margin: $gutter;
	margin-top: $halfGutter;
	width: $smallWidth - $gutter;
	height: $smallHeight - $gutter;
}




.clear {
	clear: both;
	display: block;
	overflow: hidden;
	visibility: hidden;
	width: 0;
	height: 0;
}






// === input complexity stuff ===
$height: 50px;

#selfIformation, #analog {
	margin-top: 1em;
	padding-bottom: 1em;

	font-family: 'Dosis';
	font-weight: 200;
	.labelBox {
		.label {
			transform: rotate(90deg);
			transform-origin: left top 0;
			display: inline-block;
			margin: 0.5em;
			margin-left: 1.6em;
		}

		float: left;
		// background-color: $grey;
		border-radius: 0.3em;
		height: 7em;
		width: 30px;
	}
	.data {
		margin-left: 35px;
	}

	.element {
		width: 600px;
		height: $height;
		font-weight: 400;
		padding-top: 0.1em;
		border: solid 1px $lime;
		border-radius: 0.3em;
		margin-bottom: 3px;
		margin-right: 3px;
		overflow: hidden;
		white-space: nowrap;
		position: relative;
		// background-color: $grey;

		.label {
			position: absolute;
			top: 0px;
			left: 0px;
			width: 300px;
			padding: 0.5em;
			padding-top: 0.2em;
			background: linear-gradient(to right, rgba(0, 0, 0, 0.65) 0%, rgba(0, 0, 0, 0) 100%);
			z-index: 1;
		}

		.background {
			z-index: -1;
		}

		.highValue {
			position: absolute;
			right: 0px;
			top: 0px;
			padding: 0.5em;
			padding-top: 0.2em;
			z-index: 1;
			background-color: rgba(0, 0, 0, 0.5);
		}
	}

	.bits-wrapper {
		float: right;
	}

	.bit {
		width: 3px;
		height: $height - 2;
		display: inline-block;
		margin-right: 2px;
		transform-origin: bottom left;
	}


	#history, #analog {
		float: left;

		.group {
			&:nth-child(1) {
				.element {
					border: solid 1px $lavender;
				}
				.bit {
					background-color: $lavender;
				}
			}

			&:nth-child(2) {
				.element {
					border: solid 1px $blue;
				}
				.bit {
					background-color: $blue;
				}
			}
			&:nth-child(3) {
				.element {
					border: solid 1px $lavender;
				}
				.bit {
					background-color: $lavender;
				}
			}
		}
	}

	.divider {
		height: 270px;
		// width: 10px;
		// border-left: dashed 2px $grey;
		margin-left: 2px;
		float: left;
	}

	#live {
		.element {
			width: 200px;
			overflow: visible;
		}
		margin-left: 613px;

		.group {
			&:nth-child(1) {
				.element {
					background-color: $lime;
					border: solid 1px $lime;
				}
			}

			&:nth-child(2) {
				.element {
					background-color: $orange;
					border: solid 1px $orange;
				}
			}
			&:nth-child(3) {
				.element {
					background-color: $lavender;
					border: solid 1px $lavender;
				}
			}
		}
		.label {
			background: none;
		}
	}

}

.pReturn {
	.pReturnWrapper, #markovInformation {
		white-space: nowrap;
		padding-left: 2px;

		.bar {
			width: 2px;
			height: $height - 2;
			border-right: 2px solid #333;
			background-color: $lavender;
			box-sizing: border-box;
			// float: left;
			transform-origin: bottom left;
			display: inline-block;
		}
	}
}

div.inline {
	display: inline-block;
}

svg {
	path {
		// stroke: $darkGrey;
		stroke-width: 3px;
	}

	.outline {
		stroke-width: 1px;
		// stroke: $lightGrey;
		fill: none;
	}
	rect.outline {
		shape-rendering: crispEdges;
	}

	path.glyph {
		stroke: $blue;
		marker-end: url(#markerArrow);
	}

	path.quiver {
		stroke: white;
		stroke-width: 1px;
		marker-end: url(#quiverArrow);
	}
}

svg.matrix {
	// background-color: white;
	margin-right: 1px;
	path {
		stroke-width: 1.5px;
		&.anchor {
			stroke: $blue;
		}
	}

	circle.outline {
		stroke-width: 0.5px;
	}
}
